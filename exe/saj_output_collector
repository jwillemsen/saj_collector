#!/usr/bin/env ruby

require "rexml/document"
require 'net/http'
require 'pvoutput/client'
require 'yaml'

# Load the configuration from the yaml file
sajcollector_config = YAML::load_file('/etc/saj_collector/saj_collector.yaml')

# Create a pvoutput with the configured system_id and api_key which both
# can be obtained from the pvoutput website
pvoutput = PVOutput::Client.new(sajcollector_config[:system_id], sajcollector_config[:api_key])

# Get the current day trend data from the SAJ device
c = Net::HTTP.get(sajcollector_config[:saj], '/day_trend.xml')

# Let REXML parse the XML file
doc = REXML::Document.new c

days = 0

# Get the number of days of the current month
doc.elements.each("day_trend/days"){
  |e| days = e.text.to_i
}

puts "Number of days this month #{days}"

options = {
  'output_date' => 0, # Day generated
  'energy_generated' => 0 # Energy generation in watt hours
}

time = Time.now
m = time.strftime('%Y%m')
counter = 0
current_day = "00"

while counter < days
  options[:output_date] = "#{m}#{current_day.next!}"

  # Get the power output of the day,
  doc.elements.each("day_trend/d#{counter}"){
    |e| options[:energy_generated] = (e.text.to_i * 100).to_s
  }
  puts "Energy generated (#{options[:output_date]}) : #{options[:energy_generated]} kWH"

  pvoutput.add_output(
    :output_date => options[:output_date],
    :energy_generated => options[:energy_generated],
    )

  counter += 1
end
